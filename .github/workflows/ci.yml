name: CI

on:
  pull_request: {}
  push: { branches: [ master ] }

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  find_gradle_jobs:
    runs-on: ubuntu-18.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - name: Cache Gradle Home files
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-home-testmatrix-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-home-testmatrix-
      - id: set-matrix
        env:
          # Since we override the tests executor,
          # we should not push empty results to the cache
          READ_ONLY_REMOTE_GRADLE_CACHE: true
        run: |
          TASKS=$(./gradlew --no-daemon --parallel -q testMatrix)
          echo $TASKS
          echo "::set-output name=matrix::{\"gradle_args\":$TASKS}"
  check:
    needs: find_gradle_jobs
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_gradle_jobs.outputs.matrix) }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - name: Cache Gradle Home files
        uses: actions/cache@v2
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-home-${{matrix.gradle_args}}_check-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-home-${{matrix.gradle_args}}_check-
      - name: Clear existing docker image cache
        run: docker image prune -af
      - name: Build and test with Gradle (${{matrix.gradle_args}})
        run: |
          ./gradlew --no-daemon --continue --scan ${{matrix.gradle_args}}
      - name: Aggregate test reports with ciMate
        if: always()
        continue-on-error: true
        env:
          CIMATE_PROJECT_ID: 2348n4vl
          CIMATE_CI_KEY: "CI / ${{ runner.os }} / ${{matrix.gradle_args}}"
        run: |
          wget -q https://get.cimate.io/release/linux/cimate
          chmod +x cimate
          ./cimate "**/TEST-*.xml"
  httpclient5_test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build with Gradle
        run: |
          echo "transport.type=httpclient5" > $HOME/.testcontainers.properties
          cat $HOME/.testcontainers.properties
          ./gradlew --no-daemon --scan testcontainers:test --tests '*EventStreamTest'
      - name: aggregate test reports with ciMate
        if: always()
        continue-on-error: true
        env:
          CIMATE_PROJECT_ID: 2348n4vl
          CIMATE_CI_KEY: "CI / Apache HttpClient5"
        run: |
          wget -q https://get.cimate.io/release/linux/cimate
          chmod +x cimate
          ./cimate "**/TEST-*.xml"
